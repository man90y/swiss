{"_id":"uint32","_rev":"19-c51fe3d65977f0eb89839264c3ba9b9d","name":"uint32","description":"a javascript library for dealing with (bitwise) uint32 operations","dist-tags":{"latest":"0.2.1"},"versions":{"0.1.0":{"name":"uint32","version":"0.1.0","description":"a javascript library for dealing with (bitwise) uint32 operations","scripts":{"test":"jshint uint32.js test_uint32.js && mocha test_uint32","hint":"jshint uint32.js test_uint32.js"},"repository":{"type":"git","url":"https://github.com/fxa/uint32.js.git"},"keywords":["uint32","bitwise","binary","shift","rotate"],"author":{"name":"Franz X Antesberger","email":"github@franz-antesberger.de"},"license":"MIT","dependencies":{},"devDependencies":{"expect.js":"latest","mocha":"latest","jshint":"latest"},"_id":"uint32@0.1.0","dist":{"shasum":"588dba9974af42299b3fc37222918e029e9bb6db","tarball":"https://registry.npmjs.org/uint32/-/uint32-0.1.0.tgz","integrity":"sha512-m4rEweTfiVQlay0xFzJFJIowJZntYccBmGSuyjsaDYHSreWEDHRiCMhJ7pb5htHbEv9Hd4waXKHaoGWy+8w4QA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDui6nlqmyEWC8iRDuBc93z6Q5lthWtKYNKxyku6vG4TAiAs7BmY+48OIWAekgKo9BQC1QN5TlRp6W++j4WFmYtEhQ=="}]},"_npmVersion":"1.2.0","_npmUser":{"name":"fxa","email":"info@franz-antesberger.de"},"maintainers":[{"name":"fxa","email":"info@franz-antesberger.de"}]},"0.1.1":{"name":"uint32","version":"0.1.1","description":"a javascript library for dealing with (bitwise) uint32 operations","homepage":"https://www.github.com/fxa/uint32.js","main":"./uint32","scripts":{"test":"jshint uint32.js test_uint32.js && mocha test_uint32","hint":"jshint uint32.js test_uint32.js"},"repository":{"type":"git","url":"https://github.com/fxa/uin32.js.git"},"keywords":["uint32","bitwise","binary","shift","rotate"],"author":{"name":"Franz X Antesberger","email":"info@franz-antesberger.de"},"license":"Do, what You want","dependencies":{},"devDependencies":{"expect.js":"latest","mocha":"latest","jshint":"latest"},"files":["README.md","tests.html","test_uint32.js","uint32.js"],"bugs":{"url":"https://github.com/fxa/uin32.js/issues"},"_id":"uint32@0.1.1","dist":{"shasum":"2c16da39ac3908ca067ea8555afaf7ddc6066d0f","tarball":"https://registry.npmjs.org/uint32/-/uint32-0.1.1.tgz","integrity":"sha512-Szbj0ndUEDvHPr4q2pKhfgElQDyLoyEYRc83UmtRo28CAoB6TAOTb1nO2joqxu1DCrDuSalTLL8t7AReatwt0Q==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCLiRn+j08alVbI9vhxct7zmcnrmqIo2UK/pmYwjNRGJQIgEvVhDQA89eYcic/E/6DjYKonR35QbHrNURq4VUGhX9E="}]},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"fxa","email":"info@franz-antesberger.de"},"maintainers":[{"name":"fxa","email":"info@franz-antesberger.de"}]},"0.1.2":{"name":"uint32","version":"0.1.2","description":"a javascript library for dealing with (bitwise) uint32 operations","homepage":"https://www.github.com/fxa/uint32.js","main":"./uint32","scripts":{"test":"jshint uint32.js test_uint32.js && mocha --reporter spec test_uint32","hint":"jshint uint32.js test_uint32.js"},"repository":{"type":"git","url":"https://github.com/fxa/uin32.js.git"},"keywords":["uint32","bitwise","binary","shift","rotate"],"author":{"name":"Franz X Antesberger","email":"info@franz-antesberger.de"},"license":"Do, what You want","dependencies":{},"devDependencies":{"expect.js":"latest","mocha":"latest","jshint":"latest"},"files":["README.md","tests.html","test_uint32.js","uint32.js"],"bugs":{"url":"https://github.com/fxa/uin32.js/issues"},"_id":"uint32@0.1.2","dist":{"shasum":"846a94f67d03e2d112041bca062f512db10f77d0","tarball":"https://registry.npmjs.org/uint32/-/uint32-0.1.2.tgz","integrity":"sha512-yxx1LofBarO74rDMJtTpEy2Umvlb3RzaidSgv53eLvK0NKsUrKf7W6lecgf71h++JamYLE0cwx6SfOUeRvYHsw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGiN3xZo81nTWywpQofP7fzsYB9N8HGz8o+GxxIZWkQiAiA3d8FYiBTO725VrG7WiKRDYPgh88b7ZXdEh43fkwHmhw=="}]},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"fxa","email":"info@franz-antesberger.de"},"maintainers":[{"name":"fxa","email":"info@franz-antesberger.de"}]},"0.1.3":{"name":"uint32","version":"0.1.3","description":"a javascript library for dealing with (bitwise) uint32 operations","homepage":"https://www.github.com/fxa/uint32.js","main":"./uint32","scripts":{"test":"jshint uint32.js test_uint32.js && mocha --reporter spec test_uint32","hint":"jshint uint32.js test_uint32.js"},"repository":{"type":"git","url":"https://github.com/fxa/uin32.js.git"},"keywords":["uint32","bitwise","binary","shift","rotate"],"author":{"name":"Franz X Antesberger","email":"info@franz-antesberger.de"},"license":"Do, what You want","dependencies":{},"devDependencies":{"expect.js":"latest","mocha":"latest","jshint":"latest"},"files":["README.md","tests.html","test_uint32.js","uint32.js"],"bugs":{"url":"https://github.com/fxa/uin32.js/issues"},"_id":"uint32@0.1.3","dist":{"shasum":"1a2deaf76206c6a6999846b5a602d9696b9810ab","tarball":"https://registry.npmjs.org/uint32/-/uint32-0.1.3.tgz","integrity":"sha512-QWUsxeuCgMO9xnLADETmtdZD/vac1KaRkTxnfWR0k9dxlCqSgJ9U1cb5tshqosU8lKeEC9MHY5D9dbIrqXsftg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFz15rj2U7IN6rXT2FHap1K1sK1y762hQ8uFkgMOVCJcAiBFJQ5/v/5k+qTN4Uao7+Vyiw8yH8Sj3OzUSbNNR4Vw6g=="}]},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"fxa","email":"info@franz-antesberger.de"},"maintainers":[{"name":"fxa","email":"info@franz-antesberger.de"}]},"0.2.0":{"name":"uint32","version":"0.2.0","description":"a javascript library for dealing with (bitwise) uint32 operations","homepage":"https://www.github.com/fxa/uint32.js","main":"./uint32","scripts":{"test":"jshint uint32.js test_uint32.js && jscs uint32.js test_uint32.js && mocha --reporter spec test_uint32","hint":"jshint uint32.js test_uint32.js && jscs uint32.js test_uint32.js"},"repository":{"type":"git","url":"https://github.com/fxa/uin32.js.git"},"keywords":["uint32","bitwise","binary","shift","rotate"],"author":{"name":"Franz X Antesberger","email":"info@franz-antesberger.de"},"license":"Do, what You want","dependencies":{},"devDependencies":{"expect.js":"0.2.0","mocha":"1.17.1","jshint":"2.4.3","jscs":"latest"},"files":["README.md","CHANGELOG.md","tests.html","test_uint32.js","uint32.js"],"bugs":{"url":"https://github.com/fxa/uin32.js/issues"},"_id":"uint32@0.2.0","dist":{"shasum":"a34645640b86605aab83300ed170d7e4acd486ac","tarball":"https://registry.npmjs.org/uint32/-/uint32-0.2.0.tgz","integrity":"sha512-EPEpN3oXwbmHToKtfUctsWwaPFzmAqxchkQmunmAjrQqQO1bqO2vCYjGceXgv4UN3/nMETbUpZBhp77/Tvdc1g==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEFh3G5L3Q2Ll6blyZtccbku9jmo6xDxuL0D/dQTLS6gAiBwSF8kenrUQs7M2Tie7Y2ux6SMs6Pr1F3x/3oT2ZpK8w=="}]},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"fxa","email":"info@franz-antesberger.de"},"maintainers":[{"name":"fxa","email":"info@franz-antesberger.de"}]},"0.2.1":{"name":"uint32","version":"0.2.1","description":"a javascript library for dealing with (bitwise) uint32 operations","homepage":"https://www.github.com/fxa/uint32.js","main":"./uint32","scripts":{"test":"jshint uint32.js test_uint32.js && jscs uint32.js test_uint32.js && mocha --reporter spec test_uint32","hint":"jshint uint32.js test_uint32.js && jscs uint32.js test_uint32.js"},"repository":{"type":"git","url":"https://github.com/fxa/uin32.js.git"},"keywords":["uint32","bitwise","binary","shift","rotate"],"author":{"name":"Franz X Antesberger","email":"info@franz-antesberger.de"},"license":"Do, what You want","dependencies":{},"devDependencies":{"expect.js":"0.2.0","mocha":"1.17.1","jshint":"2.4.3","jscs":"latest"},"files":[".jscs.json","README.md","CHANGELOG.md","tests.html","test_uint32.js","uint32.js"],"bugs":{"url":"https://github.com/fxa/uin32.js/issues"},"_id":"uint32@0.2.1","dist":{"shasum":"e618d802d7fffd28b708fccecc7315608bac47f2","tarball":"https://registry.npmjs.org/uint32/-/uint32-0.2.1.tgz","integrity":"sha512-d3i8kc/4s1CFW5g3FctmF1Bu2GVXGBMTn82JY2BW0ZtTtI8pRx1YWGPCFBwRF4uYVSJ7ua4y+qYEPqS+x+3w7Q==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDWV3tuD1BSUc9KDfaA7e9Ev11+KKhUz2xEjMWAjrGI3wIgBH/6y4Im40f0AK3lo2W6B3jZ+huVLYmTMffsfjO79I4="}]},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"fxa","email":"info@franz-antesberger.de"},"maintainers":[{"name":"fxa","email":"info@franz-antesberger.de"}]}},"readme":"uint32\r\n======\r\n\r\nAn uint32 library for javascript.\r\n---------------------------------\r\n\r\nWHAT??\r\n------\r\n\r\nJavascript has c like binary operators, but within c you normally use the operators on unsigned ints.\r\nIn javascript all operators work on SIGNED ints. So the operators do always a signed int conversion,\r\nwhich may have some astonishing side effects:\r\n\r\n```\r\n    var x = 0xFFFFFFFF;\r\n    ~~x === x;      // false! ~~x -> -1\r\n    (x | 0) === x;  // false! x | 0 -> -1\r\n    (x & x) === x;  // false! x & x -> -1\r\n    (x ^ 0) === x;  // false! x ^ 0 -> -1\r\n    (x >> 0) === x; // false! x >> 0 -> -1\r\n    (x << 0) === x; // false! x << 0 -> -1\r\n```\r\n\r\nAll these samples are clear counter examples of \"Principle of Least Astonishment\", see http://en.wikipedia.org/wiki/Principle_of_least_astonishment\r\n\r\nIf You ever wrote \"/\\*jshint bitwise:false\\*/\" (allowing bitwise operations),\r\nYou should know, when the above pitfalls happen.\r\n\r\nGetting\r\n-------\r\n\r\n    npm install uint32\r\n    \r\nor building for your own\r\n    \r\n    git clone https://github.com/fxa/uint32.js.git\r\n    cd uint32.js\r\n    npm install\r\n    npm test\r\n    tests.html\r\n\r\nFeel free to include uint32.js within your other js sources and minify it together with your code.\r\nThis library has only about 50 effective lines of code...\r\nFeel free to copy&paste the code.\r\n    \r\nAPI\r\n--- \r\nThe API is very unspectacular. The main thing is, it works as you expect, and that is much more than you get calling javascript binary operators directly.\r\n\r\n```\r\n    //\r\n    // importing\r\n    // \r\n    \r\n    // within node\r\n    var uint32 = require('uint32');\r\n    \r\n    // within browser\r\n    <script src=\"/path/to/uint32.js\"></script>\r\n    <script type=\"text/javascript\">\r\n        var uint32 = window.uint32;\r\n    </script>\r\n\r\n    // Creating and Extracting\r\n    uint32.fromBytesBigEndian(1,2,3,4); // 0x01020304\r\n    uint32.getByteBigEndian(0x01020304, 0); // 1\r\n    uint32.toHex(1); // '00000001'\r\n    uint32.toHex(1, 4); // '0001'\r\n    uint32.toUint32(-1); // 0xffffffff\r\n    uint32.highPart(0x0102030405); // 1\r\n    \r\n    // Bitwise Logical Operators    \r\n    uint32.and(1, 3, 5); // 1    \r\n    uint32.or(1, 3, 5); // 5\r\n    uint32.xor(1, 3, 5); // 7\r\n    uint32.not(1); // 0xfffffffe\r\n\r\n    // Shifting and Rotating\r\n    uint32.shiftLeft(0x40000000, 1); // 0x80000000\r\n    uint32.shiftRight(0x80000000, 1); // 0x40000000\r\n    uint32.rotateLeft(0x80000000, 1); // 0x00000001\r\n    uint32.rotateRight(0x00000001, 1); // 0x80000000\r\n\r\n    // Logical Gates     \r\n    uint32.choose(0x01010202, 0x00010001, 0x01000100); // 0x00010100 \r\n    uint32.majority (0x01, 0x00, 0x01); // 0x01\r\n\r\n    // Arithmetic\r\n    uint32.addMod32(0x80000001, 0x80000001); // 2\r\n    uint32.log2(0xffffffff); // 31\r\n    var result = new Uint32Array(2);\r\n    uint32.mult(0xffffffff, 0xffffffff, result); // result -> [0xfffffffe, 0x00000001]\r\n    \r\n    // That's all! \r\n    // Detailed specifications are in the tests!\r\n```\r\n\r\nLicense\r\n-------\r\nDo, what You want.\r\nThis library was designed to be a copy/paste template.\r\nIt would be nice to hear from You, if You used this library or if You just copy/pasted some source.\r\nIt would be nice, if you added a \"contains code of Franz X Antesberger\" or something like that or a ref to the github project\r\nto your license information or elsewhere.\r\n","maintainers":[{"name":"fxa","email":"info@franz-antesberger.de"}],"time":{"modified":"2022-06-28T03:32:29.232Z","created":"2013-12-05T19:21:17.715Z","0.1.0":"2013-12-05T19:21:21.883Z","0.1.1":"2013-12-06T18:22:19.036Z","0.1.2":"2013-12-08T14:59:21.395Z","0.1.3":"2013-12-17T18:22:28.541Z","0.2.0":"2014-02-06T17:17:15.859Z","0.2.1":"2014-02-07T08:38:48.818Z"},"author":{"name":"Franz X Antesberger","email":"info@franz-antesberger.de"},"repository":{"type":"git","url":"https://github.com/fxa/uin32.js.git"},"readmeFilename":"README.md","users":{"fibo":true}}